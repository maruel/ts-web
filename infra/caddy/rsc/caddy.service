[Unit]
Description=Caddy HTTP/2 web server
Documentation=https://caddyserver.com/docs
After=network.target network-online.target open_ports.service
Requires=network-online.target

[Service]
Restart=on-failure
User=ubuntu
Group=ubuntu

EnvironmentFile=/etc/caddy/caddy_secrets.env

ExecStartPre=/usr/local/bin/caddy validate --config /etc/caddy/Caddyfile
ExecStart=/usr/local/bin/caddy run --config /etc/caddy/Caddyfile
ExecReload=/usr/local/bin/caddy validate --config /etc/caddy/Caddyfile
ExecReload=/usr/local/bin/caddy reload --config /etc/caddy/Caddyfile --force
WorkingDirectory=/home/ubuntu

# Use graceful shutdown with a reasonable timeout
TimeoutStopSec=5s

# Limit the number of file descriptors; see "man systemd.exec" for more limit settings.
LimitNOFILE=1048576
# Unmodified caddy is not expected to use more than that.
LimitNPROC=512
# Maximum number of threads
TasksMax=4096

# Use private /tmp and /var/tmp, which are discarded after caddy stops.
PrivateTmp=true
# Use a minimal /dev
PrivateDevices=true
# Hide /home, /root, and /run/user. Nobody will steal your SSH-keys.
# ProtectHome=true
# Make /usr, /boot, /etc and possibly some more folders read-only.
# ProtectSystem=full
# â€¦ except /w/web/ssl/caddy, because we want Letsencrypt-certificates there.
#   This merely retains r/w access rights, it does not add any new. Must still be writable on the host!
# ReadWriteDirectories=/home/ubuntu/web/tls/caddy

# The following additional security directives only work with systemd v229 or later.
# They further restrict privileges that can be gained by caddy. Uncomment if you like.
# Note that you may have to add capabilities required by any plugins in use.
CapabilityBoundingSet=CAP_NET_BIND_SERVICE
AmbientCapabilities=CAP_NET_BIND_SERVICE
NoNewPrivileges=true

[Install]
WantedBy=default.target
